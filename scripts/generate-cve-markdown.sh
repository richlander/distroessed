#!/bin/bash

# Generate CVE markdown files from CVE JSON files
# Usage: ./generate-cve-markdown.sh <target-path>
# Example: ./generate-cve-markdown.sh /Users/rich/git/core-rich/release-notes

if [ $# -eq 0 ]; then
    echo "Usage: $0 <target-path>"
    echo "Example: $0 /Users/rich/git/core-rich/release-notes"
    exit 1
fi

TARGET_PATH="$1"
TEMPLATE_PATH="../templates/cve-template.md"
TOOLS_DIR="../_tools"
CVE_MARKDOWN_TOOL="$TOOLS_DIR/CveMarkdown"

echo "Generating CVE markdown files for: $TARGET_PATH"

# Ensure target directory exists
if [ ! -d "$TARGET_PATH" ]; then
    echo "Error: Target path does not exist: $TARGET_PATH"
    exit 1
fi

# Check if CveMarkdown tool exists
if [ ! -f "$CVE_MARKDOWN_TOOL" ] || [ ! -x "$CVE_MARKDOWN_TOOL" ]; then
    echo "Error: CveMarkdown tool not found or not executable: $CVE_MARKDOWN_TOOL"
    echo "Make sure to run ./publish.sh and ./link-binaries.sh first"
    exit 1
fi

# Check if template exists
if [ ! -f "$TEMPLATE_PATH" ]; then
    echo "Error: CVE template not found: $TEMPLATE_PATH"
    exit 1
fi

echo "Using CVE template: $TEMPLATE_PATH"

# Find all CVE JSON files in the target path (use absolute path)
TARGET_PATH_ABS=$(realpath "$TARGET_PATH")
CVE_FILES=$(find "$TARGET_PATH_ABS" -name "cve.json" -type f)

if [ -z "$CVE_FILES" ]; then
    echo "No CVE JSON files found in $TARGET_PATH_ABS"
    exit 0
fi

echo "Found CVE JSON files:"
echo "$CVE_FILES"
echo

# Process each CVE file
SUCCESS_COUNT=0
ERROR_COUNT=0

while IFS= read -r cve_file; do
    if [ -n "$cve_file" ]; then
        echo "Processing: $cve_file"
        
        # Run CveMarkdown tool
        "$CVE_MARKDOWN_TOOL" "$cve_file" "$TEMPLATE_PATH"
        
        if [ $? -eq 0 ]; then
            echo "✓ Successfully generated markdown for: $cve_file"
            SUCCESS_COUNT=$((SUCCESS_COUNT + 1))
        else
            echo "✗ Failed to generate markdown for: $cve_file"
            ERROR_COUNT=$((ERROR_COUNT + 1))
        fi
        echo
    fi
done <<< "$CVE_FILES"

echo "CVE markdown generation completed:"
echo "  Successful: $SUCCESS_COUNT"
echo "  Errors: $ERROR_COUNT"

if [ $ERROR_COUNT -gt 0 ]; then
    echo "Warning: Some CVE markdown files failed to generate"
    exit 1
fi

echo "All CVE markdown files generated successfully"